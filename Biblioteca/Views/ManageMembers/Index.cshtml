@model MembersIndexViewModel

@{
    ViewData["Title"] = "Members";
}

<h1>Members</h1>

<p>
    <a asp-action="Create" class="btn btn-dark">Create New Member</a>
</p>

<form asp-controller="ManageMembers" asp-action="Index">
    <p>
        First Name: <input type="text" name="FirstName" />
        Last Name: <input type="text" name="LastName" />
        <input type="submit" value="Filter" />
        <input asp-action="index" type="submit" value="Reset" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                First Name
            </th>
            <th>
                Last Name
            </th>
            <th>
                Address
            </th>
            <th>
                Phone
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Members)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    <a asp-controller="Borrowing" asp-action="Index" asp-route-id="@item.Id" class="btn btn-success">Borrow Book</a> |
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<form asp-controller="ManageMembers" asp-action="Index" style="display:inline">

        <input hidden name="FirstName" value="@Model.Filters.FirstName" />
        <input hidden name="LastName" value="@Model.Filters.LastName" />
        <input hidden name="CurrentPage" value="@(Model.Filters.CurrentPage - 1)" />
        <input type="submit" value="Previous" class="btn btn-outline-dark @(Model.Members.HasPreviousPage ? "" : "disabled")"/>

</form>
<form asp-controller="ManageMembers" asp-action="Index" style="display:inline">

        <input hidden name="FirstName" value="@Model.Filters.FirstName" />
        <input hidden name="LastName" value="@Model.Filters.LastName" />
        <input hidden name="CurrentPage" value="@(Model.Filters.CurrentPage + 1)" />
        <input type="submit" value="Next" class="btn btn-outline-dark @(Model.Members.HasNextPage ? "" : "disabled")"/>

</form>